[{"path":"https://otndo.obrien.page/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://otndo.obrien.page/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"getting-your-files","dir":"Articles","previous_headings":"","what":"Getting your files","title":"Data Push Summaries","text":"first thing ’ll want gather OTN matched detections detection extract files.","code":""},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"otn-projects","dir":"Articles","previous_headings":"Getting your files","what":"OTN projects","title":"Data Push Summaries","text":"’ll use data Trudel 2018 (https://members.oceantrack.org/data/repository/pbsm) show might work. First, ’ll download files. Now, just note files saved. make easier pass smmary functions later. can matched detections","code":"# Create a folder in your temporary directory to hold the sample files td <- file.path(tempdir(), \"otndo_test_files\") dir.create(td)  # Download deployment metadata download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"data-and-metadata/2018/pbsm-instrument-deployment-short-form-2018.xls\"   ),   destfile = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\"),   # Note \"mode = 'wb' is needed to download Excel files   mode = \"wb\" )  # Download qualified detections download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_qualified_detections_2018.zip\"   ),   destfile = file.path(td, \"pbsm_qualified_detections_2018.zip\") )  # Download unqualified detections download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_unqualified_detections_2018.zip\"   ),   destfile = file.path(td, \"pbsm_unqualified_detections_2018.zip\") ) qualified_otn <- file.path(td, \"pbsm_qualified_detections_2018.zip\") unqualified_otn <- file.path(td, \"pbsm_unqualified_detections_2018.zip\") deployment_otn <- file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\") download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_matched_detections_2018.zip\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\") )  matched_otn <- file.path(td, \"pbsm_matched_detections_2018.zip\")"},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"actmatos-projects","dir":"Articles","previous_headings":"Getting your files","what":"ACT/MATOS projects","title":"Data Push Summaries","text":"’re member ACT (project lives MATOS database), can access files via matos package. Two functions matos wrap otndo’s make_*_summary functions automatically download necessary files . See matos::matos_tag_summary matos::matos_receiver_summary details.","code":""},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"fact-projects","dir":"Articles","previous_headings":"Getting your files","what":"FACT projects","title":"Data Push Summaries","text":"time writing, streamlined way get FACT data Research Workspace. moving next steps, make sure necessary files downloaded.","code":""},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"running-the-functions","dir":"Articles","previous_headings":"","what":"Running the functions","title":"Data Push Summaries","text":"summary functions conduct bit data cleaning front end run everything Quarto RMarkdown template report. functions use Quarto default, RMarkdown selected : Quarto installed computer, rmd argument set TRUE. Functionality identical make_tag_push_summary:","code":"# Compiles with Quarto (default) make_receiver_push_summary(   qualified = qualified_otn,   unqualified = unqualified_otn,   deployment = deployment_otn,   rmd = F )  # Compiles with RMarkdown make_receiver_push_summary(   qualified = qualified_otn,   unqualified = unqualified_otn,   deployment = deployment_otn,   rmd = T ) make_tag_push_summary(matched = matched_otn)"},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"new-matches-since-a-certain-date","dir":"Articles","previous_headings":"","what":"New matches “since” a certain date","title":"Data Push Summaries","text":"Usually want know changed since OTN nodes crossed talked (“data push”). usually get within-node detections, well. nominally scheduled February, July, October. Crossover dates stored within otndo; package updated new dates data push occurs. can also provide date “since” argument see summary data updated since date.","code":"make_tag_push_summary(   matched = matched_otn,   since = \"2018-05-01\" )"},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"suggestions-to-improve-the-push-summaries","dir":"Articles","previous_headings":"","what":"Suggestions to improve the push summaries","title":"Data Push Summaries","text":"always open suggestions added change make useful . Please open issue GitHub email thoughts.","code":""},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"errors-and-how-to-fix-them","dir":"Articles","previous_headings":"","what":"Errors and how to fix them","title":"Data Push Summaries","text":"error created old version mapview package (pre-June 2021) package’s switch using file geodatabase increase plotting performance. fix , two options: Update mapview (suggested), Run mapviewOptions(fgb = FALSE) attempting run make_receiver_push_summary make_tag_push_summary. Note make report build slowly.","code":"Could not determine mime type for `~\\Matcheddetections_layer.fgb' Error: pandoc document conversion failed with error 63"},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Data Push Summaries","text":"Trudel, Marc. “Pilot Study Investigate Migration Atlantic Salmon Post-Smolts Interactions Aquaculture Passamaquoddy Bay, New Brunswick, Canada.” Ocean Tracking Network, 2018. https://members.oceantrack.org/project?ccode=PBSM.","code":""},{"path":"https://otndo.obrien.page/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael O'Brien. Author, maintainer.","code":""},{"path":"https://otndo.obrien.page/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"O'Brien M (2024). otndo: Understand OTN data. R package version 0.2.0,  https://otndo.obrien.page/, https://mhpob.github.io/otndo/.","code":"@Manual{,   title = {otndo: Understand your OTN data},   author = {Michael O'Brien},   year = {2024},   note = {R package version 0.2.0,  https://otndo.obrien.page/},   url = {https://mhpob.github.io/otndo/}, }"},{"path":"https://otndo.obrien.page/index.html","id":"otndo","dir":"","previous_headings":"","what":"Understand your OTN data","title":"Understand your OTN data","text":"entiendo /ˌenˈtjendo/ [ˌẽn̪ˈt̪jẽn̪.̪o]  Spanish, 1st person indicative; “understand” otndo /ˌoʊˈtjendo/ [ˌoʊ̪ˈt̪jẽn̪.d̪o] English, bad pun; “understand (OTN data)” purpose otndo provide high-level summary acoustic telemetry transmitter matches Ocean Tracking Network, putting “network” back “tracking network” noting related projects investigators.","code":""},{"path":"https://otndo.obrien.page/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Understand your OTN data","text":"can install ---date version R-universe GitHub. R-universe: GitHub:","code":"install.packages(   \"otndo\",   repos = c(     \"https://mhpob.r-universe.dev\",     \"https://cloud.r-project.org\"   ) ) # install.packages(\"remotes\") remotes::install_github(\"mhpob/otndo\")"},{"path":"https://otndo.obrien.page/index.html","id":"tag-push-summary-example","dir":"","previous_headings":"","what":"Tag push summary example","title":"Understand your OTN data","text":"basic example might use otndo summarize transmitter data: get report working directory goodies! summary number matched individuals detections researcher project: overall extent projects tags matched: fish heard project: ever-ubiquitous “abacus plot”, showing tag heard, colored project: interactive map showing detections receiver: general estimate number transmitters active given date:","code":"# Download some example data td <- file.path(tempdir(), \"otndo_test_files\") dir.create(td)  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_matched_detections_2018.zip\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )   # Make a tag push summary library(otndo)  make_tag_push_summary(   matched = file.path(td, \"pbsm_matched_detections_2018.csv\") )"},{"path":"https://otndo.obrien.page/index.html","id":"receiver-push-summary-example","dir":"","previous_headings":"","what":"Receiver push summary example","title":"Understand your OTN data","text":"basic example might use otndo summarize receiver data: summary number matched individuals detections researcher project:  overall extent projects associated tags receivers heard:  receivers heard project’s fish:  Gantt chart receivers’ deployments:  number detections individuals per receiver:  interactive map showing detections receiver:  summary unmatched detections, including likely false…  …may real!  summary unmatched detections occurred, receiver:","code":"# Download some example data  ## Deployment metadata download.file(\"https://members.oceantrack.org/data/repository/pbsm/data-and-metadata/2018/pbsm-instrument-deployment-short-form-2018.xls\",   destfile = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\"),   mode = \"wb\" )  ## Qualified detections download.file(\"https://members.oceantrack.org/data/repository/pbsm/detection-extracts/pbsm_qualified_detections_2018.zip\",   destfile = file.path(td, \"pbsm_qualified_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_qualified_detections_2018.zip\"),   exdir = td )  ## Unqualified detections download.file(\"https://members.oceantrack.org/data/repository/pbsm/detection-extracts/pbsm_unqualified_detections_2018.zip\",   destfile = file.path(td, \"pbsm_unqualified_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_unqualified_detections_2018.zip\"),   exdir = td )   # Make a receiver push summary make_receiver_push_summary(   qualified = file.path(td, \"pbsm_qualified_detections_2018.csv\"),   unqualified = file.path(td, \"pbsm_unqualified_detections_2018.csv\"),   deployment = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\") )"},{"path":"https://otndo.obrien.page/index.html","id":"getting-in-contact","dir":"","previous_headings":"","what":"Getting in contact","title":"Understand your OTN data","text":"something doesn’t work way just need little help, feel free open issue GitHub email (Mike O’Brien: obrien@umces.edu) directly.","code":""},{"path":"https://otndo.obrien.page/reference/deployment_gantt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Gantt-like chart of receiver deployments and recoveries — deployment_gantt","title":"Create a Gantt-like chart of receiver deployments and recoveries — deployment_gantt","text":"Create Gantt-like chart receiver deployments recoveries","code":""},{"path":"https://otndo.obrien.page/reference/deployment_gantt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Gantt-like chart of receiver deployments and recoveries — deployment_gantt","text":"","code":"deployment_gantt(deployment)"},{"path":"https://otndo.obrien.page/reference/deployment_gantt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Gantt-like chart of receiver deployments and recoveries — deployment_gantt","text":"deployment Cleaned deployment metadata sheet(s). Assumes cleaned internal otndo:::clean_otn_deployment function, read , converted data.table.","code":""},{"path":"https://otndo.obrien.page/reference/deployment_gantt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Gantt-like chart of receiver deployments and recoveries — deployment_gantt","text":"","code":"if (FALSE) { # Download a deployment metadata file td <- file.path(tempdir(), \"matos_test_files\") dir.create(td)  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"data-and-metadata/2018/pbsm-instrument-deployment-short-form-2018.xls/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\"),   mode = \"wb\" )  # Use internal function to clean deployment_filepath <- otndo:::write_to_tempdir(   type = \"deployment\",   files = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\"),   temp_dir = td )  # Make the Gantt chart deployment_gantt(   data.table::fread(deployment_filepath) ) }"},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"Create summary reports receiver project data OTN data push","code":""},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"","code":"make_receiver_push_summary(   qualified = NULL,   unqualified = NULL,   update_push_log = FALSE,   deployment = NULL,   out_dir = getwd(),   since = NULL,   rmd = FALSE )"},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"qualified, unqualified Default NULL: character vector file paths qualified/unqualified detections. can CSVs zipped folders. update_push_log wish use updated push log? Default FALSE, switch TRUE updated package since push occurred. deployment File path user-supplied master OTN receiver deployment metadata. out_dir Defaults working directory. directory like save report? since Date YYYY-MM-DD format. Summarizes new since provided date. rmd Logical. Compile via RMarkdown rather Quarto?","code":""},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":"push-log","dir":"Reference","previous_headings":"","what":"Push log","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"keep track ACT data pushes occur, log kept package's GitHub page. automatically downloaded every time download update package, can avoid re-downloading package changing update_push_log TRUE. can get similar behavior providing date since argument.","code":""},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":"output","dir":"Reference","previous_headings":"","what":"Output","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"function creates HTML report can viewed web browser.","code":""},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"","code":"if (FALSE) { td <- file.path(tempdir(), \"matos_test_files\") dir.create(td)  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"data-and-metadata/2018/pbsm-instrument-deployment-short-form-2018.xls/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\"),   mode = \"wb\" )   download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_qualified_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_qualified_detections_2018.zip\"),   mode = \"wb\" ) unzip(   file.path(td, \"pbsm_qualified_detections_2018.zip\"),   exdir = td )  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_unqualified_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_unqualified_detections_2018.zip\"),   mode = \"wb\" ) unzip(   file.path(td, \"pbsm_unqualified_detections_2018.zip\"),   exdir = td )  qualified_files <- file.path(td, \"pbsm_qualified_detections_2018.csv\") unqualified_files <- file.path(td, \"pbsm_unqualified_detections_2018.csv\") deployment_files <- file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\")   make_receiver_push_summary(   qualified = qualified_files,   unqualified = unqualified_files,   deployment = deployment_files,   since = \"2018-11-01\" ) }"},{"path":"https://otndo.obrien.page/reference/make_tag_push_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create summary reports of receiver project data from the OTN data push — make_tag_push_summary","title":"Create summary reports of receiver project data from the OTN data push — make_tag_push_summary","text":"Create summary reports receiver project data OTN data push","code":""},{"path":"https://otndo.obrien.page/reference/make_tag_push_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create summary reports of receiver project data from the OTN data push — make_tag_push_summary","text":"","code":"make_tag_push_summary(   matched = NULL,   update_push_log = FALSE,   since = NULL,   sensor_decoding = NULL,   out_dir = getwd(),   rmd = FALSE )"},{"path":"https://otndo.obrien.page/reference/make_tag_push_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create summary reports of receiver project data from the OTN data push — make_tag_push_summary","text":"matched argument also accepts character vector file paths matched detections. can CSVs zipped folders. update_push_log wish use updated push log? Default FALSE, switch TRUE updated package since push occurred. since date YYYY-MM-DD format. Provides summary detections matched/edited since date. sensor_decoding yet implemented. place provide information decode summarize sensor data, out_dir Defaults working directory. directory like save report? rmd Logical. Compile via RMarkdown rather Quarto?","code":""},{"path":"https://otndo.obrien.page/reference/make_tag_push_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create summary reports of receiver project data from the OTN data push — make_tag_push_summary","text":"","code":"if (FALSE) { # The code below downloads some matched detections from OTN, then calls the function. td <- file.path(tempdir(), \"matos_test_files\") dir.create(td)  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\"),   mode = \"wb\" ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  # Provide the detection file(s) to the \\code{matched} argument, with an # optional date to the \\code{since} argument to summarize what was new since # that date. make_tag_push_summary(   matched = file.path(     td,     \"pbsm_matched_detections_2018.csv\"   ),   since = \"2018-11-01\" ) }"},{"path":"https://otndo.obrien.page/reference/match_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the geographic extent of OTN projects — match_map","title":"Plot the geographic extent of OTN projects — match_map","text":"Plot geographic extent OTN projects","code":""},{"path":"https://otndo.obrien.page/reference/match_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the geographic extent of OTN projects — match_map","text":"","code":"match_map(otn_tables)"},{"path":"https://otndo.obrien.page/reference/match_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the geographic extent of OTN projects — match_map","text":"otn_tables list containing OTN's otn_resources_metadata_points GeoServer layer. Usually created using otn_query.","code":""},{"path":"https://otndo.obrien.page/reference/match_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the geographic extent of OTN projects — match_map","text":"","code":"match_map(   otn_query(\"MDWEA\") )"},{"path":"https://otndo.obrien.page/reference/match_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a reactable table of matched detections — match_table","title":"Create a reactable table of matched detections — match_table","text":"Create reactable table matched detections","code":""},{"path":"https://otndo.obrien.page/reference/match_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a reactable table of matched detections — match_table","text":"","code":"match_table(extract, type = c(\"tag\", \"receiver\"))"},{"path":"https://otndo.obrien.page/reference/match_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a reactable table of matched detections — match_table","text":"extract matched (transmitter) qualified (receiver) OTN detections type Tag receiver data? Takes values \"tag\" \"receiver\"; defaults \"tag\".","code":""},{"path":"https://otndo.obrien.page/reference/match_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a reactable table of matched detections — match_table","text":"","code":"if (FALSE) { # Receiver download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_qualified_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_qualified_detections_2018.zip\"),   mode = \"wb\" ) unzip(   file.path(td, \"pbsm_qualified_detections_2018.zip\"),   exdir = td )  qualified_dets <- data.table::fread(   file.path(td, \"pbsm_qualified_detections_2018.csv\") )  match_table(   extract = qualified_dets,   type = \"receiver\" )  # Transmitters download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\"),   mode = \"wb\" ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched_dets <- data.table::fread(   file.path(td, \"pbsm_matched_detections_2018.csv\") )  match_table(   extract = matched_dets,   type = \"tag\" ) }"},{"path":"https://otndo.obrien.page/reference/matched_abacus.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an abacus plot of matched detections — matched_abacus","title":"Create an abacus plot of matched detections — matched_abacus","text":"Create abacus plot matched detections","code":""},{"path":"https://otndo.obrien.page/reference/matched_abacus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an abacus plot of matched detections — matched_abacus","text":"","code":"matched_abacus(temp_dist, release)"},{"path":"https://otndo.obrien.page/reference/matched_abacus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an abacus plot of matched detections — matched_abacus","text":"temp_dist Data output temporal_distribution() release Data frame release times/locations; subset matched detections data","code":""},{"path":"https://otndo.obrien.page/reference/matched_abacus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an abacus plot of matched detections — matched_abacus","text":"","code":"if (FALSE) { # Get a detection file download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\"),   mode = \"wb\" ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched_dets <- data.table::fread(   file.path(td, \"pbsm_matched_detections_2018.csv\") )   # Run temporal_distribution temporal <- temporal_distribution(matched_dets, \"tag\")  # Run matched_abacus matched_abacus(temporal$data, matched_dets[receiver == \"release\"]) }"},{"path":"https://otndo.obrien.page/reference/otn_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the OTN Geoserver — otn_query","title":"Query the OTN Geoserver — otn_query","text":"Query OTN Geoserver","code":""},{"path":"https://otndo.obrien.page/reference/otn_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the OTN Geoserver — otn_query","text":"","code":"otn_query(projects)"},{"path":"https://otndo.obrien.page/reference/otn_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the OTN Geoserver — otn_query","text":"projects Character vector OTN project codes like project metadata. Prepended networks can provided, necessary.","code":""},{"path":"https://otndo.obrien.page/reference/otn_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the OTN Geoserver — otn_query","text":"list \"otn_resources_metadata_points\" \"project_metadata\" given projects","code":""},{"path":"https://otndo.obrien.page/reference/otn_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the OTN Geoserver — otn_query","text":"","code":"otn_query(c(\"EST\", \"FACT.SCDNRDFP\", \"ACT.MDBSB\", \"MDBSB\")) #> $otn_resources_metadata_points #>                                                            FID collectioncode #>                                                         <char>         <char> #> 1: otn_resources_metadata_points.fid-331d9637_18ffed82283_2bf4            EST #> 2: otn_resources_metadata_points.fid-331d9637_18ffed82283_2dd9       SCDNRDFP #> 3: otn_resources_metadata_points.fid-331d9637_18ffed82283_2eb0          MDBSB #>    report #>    <lgcl> #> 1:     NA #> 2:     NA #> 3:     NA #>                                                                                                               resource_full_name #>                                                                                                                           <char> #> 1:                                                                        Shedd Aquarium Bahamas Sharks and Ray Research Program #> 2:                                                                                    Diadromous Fishes statewide movement in SC #> 3: Influence of Turbine Construction Noise on Black Sea Bass Displacement and Physiological Condition in the MD Wind Energy Area #>          ocean seriescode    status collaborationtype totalrecords    id #>         <char>     <char>    <char>            <char>       <lgcl> <int> #> 1: NW ATLANTIC  OTNGlobal   ongoing              Data           NA   312 #> 2: NW ATLANTIC       FACT   ongoing        Deployment           NA   836 #> 3: NE ATLANTIC        ACT completed              Data           NA  1050 #>                                                                          the_geom #>                                                                            <char> #> 1: POLYGON ((-76.85 23.62, -76.85 24.83, -75.9 24.83, -75.9 23.62, -76.85 23.62)) #> 2:     POLYGON ((-82.46 25.41, -82.46 35.99, -78 35.99, -78 25.41, -82.46 25.41)) #> 3: POLYGON ((-79.53 33.88, -79.53 42.26, -68.1 42.26, -68.1 33.88, -79.53 33.88)) #>  #> $project_metadata #>                                               FID collectioncode    id #>                                            <char>         <char> <int> #> 1: project_metadata.fid-331d9637_18ffed82283_2fc4           TEST    37 #> 2: project_metadata.fid-331d9637_18ffed82283_30b5           TEST   279 #> 3: project_metadata.fid-331d9637_18ffed82283_30df           TEST   322 #>    seriescode collaborationtype shortname    longname citation abstract #>        <char>            <lgcl>    <char>      <char>   <lgcl>   <lgcl> #> 1:     GLOBAL                NA      TEST Test Series       NA       NA #> 2:     GLOBAL                NA      TEST Test Series       NA       NA #> 3:     GLOBAL                NA      TEST Test Series       NA       NA #>    institutioncode  ocean country  state local_area locality westbl eastbl #>             <lgcl> <char>  <lgcl> <lgcl>     <lgcl>   <lgcl>  <int>  <int> #> 1:              NA GLOBAL      NA     NA         NA       NA   -180    180 #> 2:              NA GLOBAL      NA     NA         NA       NA   -180    180 #> 3:              NA GLOBAL      NA     NA         NA       NA   -180    180 #>    southbl northbl  status  usage website      sdate   edate       node #>      <int>   <int>  <char> <lgcl>  <lgcl>     <IDat>  <char>     <char> #> 1:     -90      90 ongoing     NA      NA 2000-01-01 ongoing OTN-Global #> 2:     -90      90 ongoing     NA      NA 2000-01-01 ongoing        nep #> 3:     -90      90 ongoing     NA      NA       <NA>         OTN-Global #>    database       db_location datacentre #>      <char>            <char>     <lgcl> #> 1:      otn db.oceantrack.org         NA #> 2:  nepnode db.oceantrack.org         NA #> 3:      otn db.oceantrack.org         NA #>                                                    the_geom #>                                                      <char> #> 1: POLYGON ((-180 -90, -180 90, 180 90, 180 -90, -180 -90)) #> 2: POLYGON ((-180 -90, -180 90, 180 90, 180 -90, -180 -90)) #> 3: POLYGON ((-180 -90, -180 90, 180 90, 180 -90, -180 -90)) #>"},{"path":"https://otndo.obrien.page/reference/otndo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"otndo: Understand your OTN data — otndo-package","title":"otndo: Understand your OTN data — otndo-package","text":"package provides functions summarize various type OTN-style data.","code":""},{"path":[]},{"path":"https://otndo.obrien.page/reference/otndo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"otndo: Understand your OTN data — otndo-package","text":"Maintainer: Michael O'Brien mike@obrien.page (ORCID)","code":""},{"path":"https://otndo.obrien.page/reference/prep_match_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare the detection match summary data — prep_match_table","title":"Prepare the detection match summary data — prep_match_table","text":"Prepare detection match summary data","code":""},{"path":"https://otndo.obrien.page/reference/prep_match_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare the detection match summary data — prep_match_table","text":"","code":"prep_match_table(extract, type = c(\"tag\", \"receiver\"))"},{"path":"https://otndo.obrien.page/reference/prep_match_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare the detection match summary data — prep_match_table","text":"extract matched (transmitter) qualified (receiver) OTN detections type Tag receiver data? Takes values \"tag\" \"receiver\"; defaults \"tag\".","code":""},{"path":"https://otndo.obrien.page/reference/prep_station_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize OTN extract data by station and convert to a spatial object — prep_station_spatial","title":"Summarize OTN extract data by station and convert to a spatial object — prep_station_spatial","text":"Summarize OTN extract data station convert spatial object","code":""},{"path":"https://otndo.obrien.page/reference/prep_station_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize OTN extract data by station and convert to a spatial object — prep_station_spatial","text":"","code":"prep_station_spatial(extract, type = c(\"tag\", \"receiver\"))"},{"path":"https://otndo.obrien.page/reference/prep_station_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize OTN extract data by station and convert to a spatial object — prep_station_spatial","text":"extract OTN extract data type type extract data: \"tag\" \"receiver\"","code":""},{"path":"https://otndo.obrien.page/reference/prep_station_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize OTN extract data by station and convert to a spatial object — prep_station_spatial","text":"","code":"if (FALSE) { # Get an extract file download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\"),   mode = \"wb\" ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched_dets <- data.table::fread(   file.path(td, \"pbsm_matched_detections_2018.csv\") )  # Convert to spatial prep_station_spatial(matched_dets, \"tag\") }"},{"path":"https://otndo.obrien.page/reference/project_contacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and combine the contacts for matched projects — project_contacts","title":"Extract and combine the contacts for matched projects — project_contacts","text":"Extract combine contacts matched projects","code":""},{"path":"https://otndo.obrien.page/reference/project_contacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and combine the contacts for matched projects — project_contacts","text":"","code":"project_contacts(extract, type = c(\"receiver\", \"tag\"))"},{"path":"https://otndo.obrien.page/reference/project_contacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and combine the contacts for matched projects — project_contacts","text":"extract data.frame transmitter/receiver detections matched OTN: matched detections tags qualified detections receivers type Type extract data: \"tag\" \"receiver\"","code":""},{"path":"https://otndo.obrien.page/reference/project_contacts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and combine the contacts for matched projects — project_contacts","text":"data.table containing project names, principal investigators (PI), points contact (POC), respective emails. Multiple emails separated commas.","code":""},{"path":"https://otndo.obrien.page/reference/project_contacts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and combine the contacts for matched projects — project_contacts","text":"","code":"if (FALSE) { # Set up example data td <- file.path(tempdir(), \"otndo_example\") dir.create(td)  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\"),   mode = \"wb\" ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched <- read.csv(file.path(   td,   \"pbsm_matched_detections_2018.csv\" ))  # Actually run the function project_contacts(matched, type = \"tag\")  # Clean up unlink(td, recursive = TRUE) }"},{"path":"https://otndo.obrien.page/reference/remaining_transmitters.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate transmitters remaining in the system — remaining_transmitters","title":"Estimate transmitters remaining in the system — remaining_transmitters","text":"function estimates transmitters remaining system finding last date detection transmitter summing available transmitters given day. coarse measure likely inaccurate sparse data short time scales.","code":""},{"path":"https://otndo.obrien.page/reference/remaining_transmitters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate transmitters remaining in the system — remaining_transmitters","text":"","code":"remaining_transmitters(matched, push_log, release = NULL)"},{"path":"https://otndo.obrien.page/reference/remaining_transmitters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate transmitters remaining in the system — remaining_transmitters","text":"matched matched OTN transmitter detections push_log data.frame containing date -recent data push. requirement likely change future. release Optional. Data frame release times/locations; subset matched detections data","code":""},{"path":"https://otndo.obrien.page/reference/remaining_transmitters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate transmitters remaining in the system — remaining_transmitters","text":"","code":"if (FALSE) { #' # Set up example data td <- file.path(tempdir(), \"otndo_example\") dir.create(td)  # For tag data download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched <- read.csv(file.path(   td,   \"pbsm_matched_detections_2018.csv\" ))  # Run remaining_transmitters() remaining_transmitters(matched_dets, data.frame(date = as.Date(\"2020-01-01\"))) }"},{"path":"https://otndo.obrien.page/reference/station_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the station summary table — station_table","title":"Create the station summary table — station_table","text":"Create station summary table","code":""},{"path":"https://otndo.obrien.page/reference/station_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the station summary table — station_table","text":"","code":"station_table(extract, type = c(\"tag\", \"receiver\"))"},{"path":"https://otndo.obrien.page/reference/station_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the station summary table — station_table","text":"extract OTN detections. \"Matched\" detections tag data \"qualified\" detections receiver data type type data summarized.","code":""},{"path":"https://otndo.obrien.page/reference/station_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the station summary table — station_table","text":"tag data, data.table PI, project, station, number detections, number individuals heard. receiver data, data.table station, number detections, number individuals heard (assuming PI POC ).","code":""},{"path":"https://otndo.obrien.page/reference/station_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the station summary table — station_table","text":"","code":"if (FALSE) { # Set up example data td <- file.path(tempdir(), \"otndo_example\") dir.create(td)  # For tag data download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched <- read.csv(file.path(   td,   \"pbsm_matched_detections_2018.csv\" ))  # Actually run the function prep_station_table(matched, type = \"tag\")    # For receiver data download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_qualified_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_qualified_detections_2018.zip\"),   mode = \"wb\" ) unzip(   file.path(td, \"pbsm_qualified_detections_2018.zip\"),   exdir = td )  qualified <- read.csv(file.path(td, \"pbsm_qualified_detections_2018.csv\"))  # Actually run the function station_table(qualified, type = \"receiver\")  # Clean up unlink(td, recursive = TRUE) }"},{"path":"https://otndo.obrien.page/reference/temporal_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an abacus plot of detections by project — temporal_distribution","title":"Create an abacus plot of detections by project — temporal_distribution","text":"Create abacus plot detections project","code":""},{"path":"https://otndo.obrien.page/reference/temporal_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an abacus plot of detections by project — temporal_distribution","text":"","code":"temporal_distribution(extract, type = c(\"tag\", \"receiver\"))"},{"path":"https://otndo.obrien.page/reference/temporal_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an abacus plot of detections by project — temporal_distribution","text":"extract OTN data extract file type Transmitter (tag) receiver detections?","code":""},{"path":"https://otndo.obrien.page/reference/temporal_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an abacus plot of detections by project — temporal_distribution","text":"","code":"if (FALSE) { # Set up example data td <- file.path(tempdir(), \"otndo_example\") dir.create(td)  # For tag data download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched <- read.csv(file.path(   td,   \"pbsm_matched_detections_2018.csv\" ))  temporal_distribution(matched, \"tag\") }"},{"path":"https://otndo.obrien.page/reference/utilities-make.html","id":null,"dir":"Reference","previous_headings":"","what":"Place where functions live for the make_*_summary family of functions — utilities-make","title":"Place where functions live for the make_*_summary family of functions — utilities-make","text":"Place functions live make_*_summary family functions","code":""},{"path":"https://otndo.obrien.page/reference/utilities-make.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place where functions live for the make_*_summary family of functions — utilities-make","text":"","code":"clean_otn_deployment(deployment)  provided_file_unzip(files, temp_dir)  write_to_tempdir(type, files, temp_dir)  extract_proj_name(detection_file)"},{"path":"https://otndo.obrien.page/reference/utilities-make.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place where functions live for the make_*_summary family of functions — utilities-make","text":"deployment Character. File path deployment metadata. files Character. File paths files unzipped written directory temp_dir Character. File path temporary directory type Character. Type data (deployment, qualified, unqualified). detection_file Character. File path detections.","code":""},{"path":[]},{"path":"https://otndo.obrien.page/news/index.html","id":"v-0-2","dir":"Changelog","previous_headings":"","what":"v 0.2.0","title":"otndo 0.2","text":"Break functions internal QMD template. allow clearer errors -directed testing.","code":""},{"path":"https://otndo.obrien.page/news/index.html","id":"otndo-01","dir":"Changelog","previous_headings":"","what":"otndo 0.1","title":"otndo 0.1","text":"Fix issue otndo get lost deployment metadata sheet wasn’t labeled Switch semantic versioning Add figure table captions Runiverse! Miscellaneous fixes Combine PIs/POCs projects changing staff","code":""},{"path":"https://otndo.obrien.page/news/index.html","id":"otndo-0009000","dir":"Changelog","previous_headings":"","what":"otndo 0.0.0.9000","title":"otndo 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
