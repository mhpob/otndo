[{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"getting-your-files","dir":"Articles","previous_headings":"","what":"Getting your files","title":"Data Push Summaries","text":"first thing ’ll want gather OTN matched detections detection extract files.","code":""},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"otn-projects","dir":"Articles","previous_headings":"Getting your files","what":"OTN projects","title":"Data Push Summaries","text":"’ll use data Trudel 2018 (https://members.oceantrack.org/data/repository/pbsm) show might work. First, ’ll download files. Now, just note files saved. make easier pass smmary functions later. can matched detections","code":"# Create a folder in your temporary directory to hold the sample files td <- file.path(tempdir(), \"otndo_test_files\") dir.create(td)  # Download deployment metadata download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"data-and-metadata/2018/pbsm-instrument-deployment-short-form-2018.xls\"   ),   destfile = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\"),   # Note \"mode = 'wb' is needed to download Excel files   mode = \"wb\" )  # Download qualified detections download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_qualified_detections_2018.zip\"   ),   destfile = file.path(td, \"pbsm_qualified_detections_2018.zip\") )  # Download unqualified detections download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_unqualified_detections_2018.zip\"   ),   destfile = file.path(td, \"pbsm_unqualified_detections_2018.zip\") ) qualified_otn <- file.path(td, \"pbsm_qualified_detections_2018.zip\") unqualified_otn <- file.path(td, \"pbsm_unqualified_detections_2018.zip\") deployment_otn <- file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\") download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_matched_detections_2018.zip\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\") )  matched_otn <- file.path(td, \"pbsm_matched_detections_2018.zip\")"},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"actmatos-projects","dir":"Articles","previous_headings":"Getting your files","what":"ACT/MATOS projects","title":"Data Push Summaries","text":"’re member ACT (project lives MATOS database), can access files via matos package. Two functions matos wrap otndo’s make_*_summary functions automatically download necessary files . See matos::matos_tag_summary matos::matos_receiver_summary details.","code":""},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"fact-projects","dir":"Articles","previous_headings":"Getting your files","what":"FACT projects","title":"Data Push Summaries","text":"time writing, streamlined way get FACT data Research Workspace. moving next steps, make sure necessary files downloaded.","code":""},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"running-the-functions","dir":"Articles","previous_headings":"","what":"Running the functions","title":"Data Push Summaries","text":"summary functions conduct bit data cleaning front end run everything Quarto RMarkdown template report. functions use Quarto default, RMarkdown selected : Quarto installed computer, rmd argument set TRUE. Functionality identical make_tag_push_summary:","code":"# Compiles with Quarto (default) make_receiver_push_summary(   qualified = qualified_otn,   unqualified = unqualified_otn,   deployment = deployment_otn,   rmd = F )  # Compiles with RMarkdown make_receiver_push_summary(   qualified = qualified_otn,   unqualified = unqualified_otn,   deployment = deployment_otn,   rmd = T ) make_tag_push_summary(matched = matched_otn)"},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"new-matches-since-a-certain-date","dir":"Articles","previous_headings":"","what":"New matches “since” a certain date","title":"Data Push Summaries","text":"Usually want know changed since OTN nodes crossed talked (“data push”). usually get within-node detections, well. nominally scheduled February, July, October. Crossover dates stored within otndo; package updated new dates data push occurs. can also provide date “since” argument see summary data updated since date.","code":"make_tag_push_summary(   matched = matched_otn,   since = \"2018-05-01\" )"},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"suggestions-to-improve-the-push-summaries","dir":"Articles","previous_headings":"","what":"Suggestions to improve the push summaries","title":"Data Push Summaries","text":"always open suggestions added change make useful . Please open issue GitHub email thoughts.","code":""},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"errors-and-how-to-fix-them","dir":"Articles","previous_headings":"","what":"Errors and how to fix them","title":"Data Push Summaries","text":"error created old version mapview package (pre-June 2021) package’s switch using file geodatabase increase plotting performance. fix , two options: Update mapview (suggested), Run mapviewOptions(fgb = FALSE) attempting run make_receiver_push_summary make_tag_push_summary. Note make report build slowly.","code":"Could not determine mime type for `~\\Matcheddetections_layer.fgb' Error: pandoc document conversion failed with error 63"},{"path":"https://otndo.obrien.page/articles/data-push-summaries.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Data Push Summaries","text":"Trudel, Marc. “Pilot Study Investigate Migration Atlantic Salmon Post-Smolts Interactions Aquaculture Passamaquoddy Bay, New Brunswick, Canada.” Ocean Tracking Network, 2018. https://members.oceantrack.org/project?ccode=PBSM.","code":""},{"path":"https://otndo.obrien.page/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael O'Brien. Author, maintainer.","code":""},{"path":"https://otndo.obrien.page/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"O'Brien M (2024). otndo: Understand OTN data. R package version 0.2.2,  https://otndo.obrien.page/, https://mhpob.github.io/otndo/.","code":"@Manual{,   title = {otndo: Understand your OTN data},   author = {Michael O'Brien},   year = {2024},   note = {R package version 0.2.2,  https://otndo.obrien.page/},   url = {https://mhpob.github.io/otndo/}, }"},{"path":"https://otndo.obrien.page/index.html","id":"otndo","dir":"","previous_headings":"","what":"Understand your OTN data","title":"Understand your OTN data","text":"entiendo /ˌenˈtjendo/ [ˌẽn̪ˈt̪jẽn̪.̪o]  Spanish, 1st person indicative; “understand” otndo /ˌoʊˈtjendo/ [ˌoʊ̪ˈt̪jẽn̪.d̪o] English, bad pun; “understand (OTN data)” purpose otndo provide high-level summary acoustic telemetry transmitter matches Ocean Tracking Network, putting “network” back “tracking network” noting related projects investigators.","code":""},{"path":"https://otndo.obrien.page/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Understand your OTN data","text":"can install ---date version R-universe GitHub. R-universe: GitHub:","code":"install.packages(   \"otndo\",   repos = c(     \"https://mhpob.r-universe.dev\",     \"https://cloud.r-project.org\"   ) ) # install.packages(\"remotes\") remotes::install_github(\"mhpob/otndo\")"},{"path":"https://otndo.obrien.page/index.html","id":"tag-push-summary-example","dir":"","previous_headings":"","what":"Tag push summary example","title":"Understand your OTN data","text":"basic example might use otndo summarize transmitter data: get report working directory goodies! summary number matched individuals detections researcher project: overall extent projects tags matched: fish heard project: ever-ubiquitous “abacus plot”, showing tag heard, colored project: interactive map showing detections receiver: general estimate number transmitters active given date:","code":"# Download some example data td <- file.path(tempdir(), \"otndo_test_files\") dir.create(td)  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/detection-extracts/\",     \"pbsm_matched_detections_2018.zip/@@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),       exdir = td )   # Make a tag push summary library(otndo)  make_tag_push_summary(   matched = file.path(td, \"pbsm_matched_detections_2018.csv\") )"},{"path":"https://otndo.obrien.page/index.html","id":"receiver-push-summary-example","dir":"","previous_headings":"","what":"Receiver push summary example","title":"Understand your OTN data","text":"basic example might use otndo summarize receiver data: summary number matched individuals detections researcher project:  overall extent projects associated tags receivers heard:  receivers heard project’s fish:  Gantt chart receivers’ deployments:  number detections individuals per receiver:  interactive map showing detections receiver:  summary unmatched detections, including likely false…  …may real!  summary unmatched detections occurred, receiver:","code":"# Download some example data  ## Deployment metadata download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/data-and-metadata/\",     \"archived-records/2018/pbsm-instrument-deployment-short-form-2018.xls/@@download/file\"),   destfile = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\"),   mode = \"wb\" )  ## Qualified detections download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/detection-extracts/\",     \"pbsm_qualified_detections_2018.zip/@@download/file\"   ),   destfile = file.path(td, \"pbsm_qualified_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_qualified_detections_2018.zip\"),       exdir = td )  ## Unqualified detections download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/detection-extracts/\",     \"pbsm_unqualified_detections_2018.zip/@@download/file\"   ),   destfile = file.path(td, \"pbsm_unqualified_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_unqualified_detections_2018.zip\"),       exdir = td )   # Make a receiver push summary make_receiver_push_summary(   qualified = file.path(td, \"pbsm_qualified_detections_2018.csv\"),   unqualified = file.path(td, \"pbsm_unqualified_detections_2018.csv\"),   deployment = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\") )"},{"path":"https://otndo.obrien.page/index.html","id":"getting-in-contact","dir":"","previous_headings":"","what":"Getting in contact","title":"Understand your OTN data","text":"something doesn’t work way just need little help, feel free open issue GitHub email (Mike O’Brien: obrien@umces.edu) directly.","code":""},{"path":"https://otndo.obrien.page/reference/deployment_gantt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Gantt-like chart of receiver deployments and recoveries — deployment_gantt","title":"Create a Gantt-like chart of receiver deployments and recoveries — deployment_gantt","text":"Create Gantt-like chart receiver deployments recoveries","code":""},{"path":"https://otndo.obrien.page/reference/deployment_gantt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Gantt-like chart of receiver deployments and recoveries — deployment_gantt","text":"","code":"deployment_gantt(deployment)"},{"path":"https://otndo.obrien.page/reference/deployment_gantt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Gantt-like chart of receiver deployments and recoveries — deployment_gantt","text":"deployment Cleaned deployment metadata sheet(s). Assumes cleaned internal otndo:::clean_otn_deployment function, read , converted data.table.","code":""},{"path":"https://otndo.obrien.page/reference/deployment_gantt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Gantt-like chart of receiver deployments and recoveries — deployment_gantt","text":"","code":"if (FALSE) { # Download a deployment metadata file td <- file.path(tempdir(), \"matos_test_files\") dir.create(td)  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"data-and-metadata/2018/pbsm-instrument-deployment-short-form-2018.xls/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\"),   mode = \"wb\" )  # Use internal function to clean deployment_filepath <- otndo:::write_to_tempdir(   type = \"deployment\",   files = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\"),   temp_dir = td )  # Make the Gantt chart deployment_gantt(   data.table::fread(deployment_filepath) ) }"},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"Create summary reports receiver project data OTN data push","code":""},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"","code":"make_receiver_push_summary(   qualified = NULL,   unqualified = NULL,   update_push_log = FALSE,   deployment = NULL,   out_dir = getwd(),   since = NULL,   rmd = FALSE )"},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"qualified, unqualified Default NULL: character vector file paths qualified/unqualified detections. can CSVs zipped folders. update_push_log wish use updated push log? Default FALSE, switch TRUE updated package since push occurred. deployment File path user-supplied master OTN receiver deployment metadata. out_dir Defaults working directory. directory like save report? since Date YYYY-MM-DD format. Summarizes new since provided date. rmd Logical. Compile via RMarkdown rather Quarto?","code":""},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":"push-log","dir":"Reference","previous_headings":"","what":"Push log","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"keep track ACT data pushes occur, log kept package's GitHub page. automatically downloaded every time download update package, can avoid re-downloading package changing update_push_log TRUE. can get similar behavior providing date since argument.","code":""},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":"output","dir":"Reference","previous_headings":"","what":"Output","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"function creates HTML report can viewed web browser.","code":""},{"path":"https://otndo.obrien.page/reference/make_receiver_push_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create summary reports of receiver project data from the OTN data push — make_receiver_push_summary","text":"","code":"if (FALSE) { td <- file.path(tempdir(), \"matos_test_files\") dir.create(td)  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"data-and-metadata/archived-records/2018/\",     \"pbsm-instrument-deployment-short-form-2018.xls/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\"),   mode = \"wb\" )   download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_qualified_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_qualified_detections_2018.zip\"),   mode = \"wb\" ) unzip(   file.path(td, \"pbsm_qualified_detections_2018.zip\"),   exdir = td )  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_unqualified_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_unqualified_detections_2018.zip\"),   mode = \"wb\" ) unzip(   file.path(td, \"pbsm_unqualified_detections_2018.zip\"),   exdir = td )  qualified_files <- file.path(td, \"pbsm_qualified_detections_2018.csv\") unqualified_files <- file.path(td, \"pbsm_unqualified_detections_2018.csv\") deployment_files <- file.path(td, \"pbsm-instrument-deployment-short-form-2018.xls\")   make_receiver_push_summary(   qualified = qualified_files,   unqualified = unqualified_files,   deployment = deployment_files,   since = \"2018-11-01\" ) }"},{"path":"https://otndo.obrien.page/reference/make_tag_push_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create summary reports of receiver project data from the OTN data push — make_tag_push_summary","title":"Create summary reports of receiver project data from the OTN data push — make_tag_push_summary","text":"Create summary reports receiver project data OTN data push","code":""},{"path":"https://otndo.obrien.page/reference/make_tag_push_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create summary reports of receiver project data from the OTN data push — make_tag_push_summary","text":"","code":"make_tag_push_summary(   matched = NULL,   update_push_log = FALSE,   since = NULL,   sensor_decoding = NULL,   out_dir = getwd(),   rmd = FALSE )"},{"path":"https://otndo.obrien.page/reference/make_tag_push_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create summary reports of receiver project data from the OTN data push — make_tag_push_summary","text":"matched argument also accepts character vector file paths matched detections. can CSVs zipped folders. update_push_log wish use updated push log? Default FALSE, switch TRUE updated package since push occurred. since date YYYY-MM-DD format. Provides summary detections matched/edited since date. sensor_decoding yet implemented. place provide information decode summarize sensor data, out_dir Defaults working directory. directory like save report? rmd Logical. Compile via RMarkdown rather Quarto?","code":""},{"path":"https://otndo.obrien.page/reference/make_tag_push_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create summary reports of receiver project data from the OTN data push — make_tag_push_summary","text":"","code":"if (FALSE) { # The code below downloads some matched detections from OTN, then calls the function. td <- file.path(tempdir(), \"matos_test_files\") dir.create(td)  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\"),   mode = \"wb\" ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  # Provide the detection file(s) to the \\code{matched} argument, with an # optional date to the \\code{since} argument to summarize what was new since # that date. make_tag_push_summary(   matched = file.path(     td,     \"pbsm_matched_detections_2018.csv\"   ),   since = \"2018-11-01\" ) }"},{"path":"https://otndo.obrien.page/reference/match_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the geographic extent of OTN projects — match_map","title":"Plot the geographic extent of OTN projects — match_map","text":"Plot geographic extent OTN projects","code":""},{"path":"https://otndo.obrien.page/reference/match_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the geographic extent of OTN projects — match_map","text":"","code":"match_map(otn_tables)"},{"path":"https://otndo.obrien.page/reference/match_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the geographic extent of OTN projects — match_map","text":"otn_tables list containing OTN's otn_resources_metadata_points GeoServer layer. Usually created using otn_query.","code":""},{"path":"https://otndo.obrien.page/reference/match_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the geographic extent of OTN projects — match_map","text":"","code":"match_map(   otn_query(\"MDWEA\") )"},{"path":"https://otndo.obrien.page/reference/match_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a reactable table of matched detections — match_table","title":"Create a reactable table of matched detections — match_table","text":"Create reactable table matched detections","code":""},{"path":"https://otndo.obrien.page/reference/match_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a reactable table of matched detections — match_table","text":"","code":"match_table(extract, type = c(\"tag\", \"receiver\"))"},{"path":"https://otndo.obrien.page/reference/match_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a reactable table of matched detections — match_table","text":"extract matched (transmitter) qualified (receiver) OTN detections type Tag receiver data? Takes values \"tag\" \"receiver\"; defaults \"tag\".","code":""},{"path":"https://otndo.obrien.page/reference/match_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a reactable table of matched detections — match_table","text":"","code":"if (FALSE) { # Receiver download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_qualified_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_qualified_detections_2018.zip\"),   mode = \"wb\" ) unzip(   file.path(td, \"pbsm_qualified_detections_2018.zip\"),   exdir = td )  qualified_dets <- data.table::fread(   file.path(td, \"pbsm_qualified_detections_2018.csv\") )  match_table(   extract = qualified_dets,   type = \"receiver\" )  # Transmitters download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\"),   mode = \"wb\" ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched_dets <- data.table::fread(   file.path(td, \"pbsm_matched_detections_2018.csv\") )  match_table(   extract = matched_dets,   type = \"tag\" ) }"},{"path":"https://otndo.obrien.page/reference/matched_abacus.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an abacus plot of matched detections — matched_abacus","title":"Create an abacus plot of matched detections — matched_abacus","text":"Create abacus plot matched detections","code":""},{"path":"https://otndo.obrien.page/reference/matched_abacus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an abacus plot of matched detections — matched_abacus","text":"","code":"matched_abacus(temp_dist, release)"},{"path":"https://otndo.obrien.page/reference/matched_abacus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an abacus plot of matched detections — matched_abacus","text":"temp_dist Data output temporal_distribution() release Data frame release times/locations; subset matched detections data","code":""},{"path":"https://otndo.obrien.page/reference/matched_abacus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an abacus plot of matched detections — matched_abacus","text":"","code":"if (FALSE) { # Get a detection file download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\"),   mode = \"wb\" ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched_dets <- data.table::fread(   file.path(td, \"pbsm_matched_detections_2018.csv\") )   # Run temporal_distribution temporal <- temporal_distribution(matched_dets, \"tag\")  # Run matched_abacus matched_abacus(temporal$data, matched_dets[receiver == \"release\"]) }"},{"path":"https://otndo.obrien.page/reference/otn_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the OTN Geoserver — otn_query","title":"Query the OTN Geoserver — otn_query","text":"Query OTN Geoserver","code":""},{"path":"https://otndo.obrien.page/reference/otn_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the OTN Geoserver — otn_query","text":"","code":"otn_query(projects)"},{"path":"https://otndo.obrien.page/reference/otn_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the OTN Geoserver — otn_query","text":"projects Character vector OTN project codes like project metadata. Prepended networks can provided, necessary.","code":""},{"path":"https://otndo.obrien.page/reference/otn_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the OTN Geoserver — otn_query","text":"list \"otn_resources_metadata_points\" \"project_metadata\" given projects","code":""},{"path":"https://otndo.obrien.page/reference/otn_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the OTN Geoserver — otn_query","text":"","code":"otn_query(c(\"EST\", \"FACT.SCDNRDFP\", \"ACT.MDBSB\", \"MDBSB\")) #> $otn_resources_metadata_points #>                                                             FID collectioncode #>                                                          <char>         <char> #> 1: otn_resources_metadata_points.fid-66c0a928_1903c3e57ef_-7bd0            EST #> 2: otn_resources_metadata_points.fid-66c0a928_1903c3e57ef_-79eb       SCDNRDFP #> 3: otn_resources_metadata_points.fid-66c0a928_1903c3e57ef_-7914          MDBSB #>    report #>    <lgcl> #> 1:     NA #> 2:     NA #> 3:     NA #>                                                                                                               resource_full_name #>                                                                                                                           <char> #> 1:                                                                        Shedd Aquarium Bahamas Sharks and Ray Research Program #> 2:                                                                                    Diadromous Fishes statewide movement in SC #> 3: Influence of Turbine Construction Noise on Black Sea Bass Displacement and Physiological Condition in the MD Wind Energy Area #>          ocean seriescode    status collaborationtype totalrecords    id #>         <char>     <char>    <char>            <char>       <lgcl> <int> #> 1: NW ATLANTIC  OTNGlobal   ongoing              Data           NA   312 #> 2: NW ATLANTIC       FACT   ongoing        Deployment           NA   836 #> 3: NE ATLANTIC        ACT completed              Data           NA  1050 #>                                                                          the_geom #>                                                                            <char> #> 1: POLYGON ((-76.85 23.62, -76.85 24.83, -75.9 24.83, -75.9 23.62, -76.85 23.62)) #> 2:     POLYGON ((-82.46 25.41, -82.46 35.99, -78 35.99, -78 25.41, -82.46 25.41)) #> 3: POLYGON ((-79.53 33.88, -79.53 42.26, -68.1 42.26, -68.1 33.88, -79.53 33.88)) #>  #> $project_metadata #>                                                FID collectioncode    id #>                                             <char>         <char> <int> #> 1: project_metadata.fid-66c0a928_1903c3e57ef_-7800           TEST    37 #> 2: project_metadata.fid-66c0a928_1903c3e57ef_-770f           TEST   279 #> 3: project_metadata.fid-66c0a928_1903c3e57ef_-76e5           TEST   322 #>    seriescode collaborationtype shortname    longname citation abstract #>        <char>            <lgcl>    <char>      <char>   <lgcl>   <lgcl> #> 1:     GLOBAL                NA      TEST Test Series       NA       NA #> 2:     GLOBAL                NA      TEST Test Series       NA       NA #> 3:     GLOBAL                NA      TEST Test Series       NA       NA #>    institutioncode  ocean country  state local_area locality westbl eastbl #>             <lgcl> <char>  <lgcl> <lgcl>     <lgcl>   <lgcl>  <int>  <int> #> 1:              NA GLOBAL      NA     NA         NA       NA   -180    180 #> 2:              NA GLOBAL      NA     NA         NA       NA   -180    180 #> 3:              NA GLOBAL      NA     NA         NA       NA   -180    180 #>    southbl northbl  status  usage website      sdate   edate       node #>      <int>   <int>  <char> <lgcl>  <lgcl>     <IDat>  <char>     <char> #> 1:     -90      90 ongoing     NA      NA 2000-01-01 ongoing OTN-Global #> 2:     -90      90 ongoing     NA      NA 2000-01-01 ongoing        nep #> 3:     -90      90 ongoing     NA      NA       <NA>         OTN-Global #>    database       db_location datacentre #>      <char>            <char>     <lgcl> #> 1:      otn db.oceantrack.org         NA #> 2:  nepnode db.oceantrack.org         NA #> 3:      otn db.oceantrack.org         NA #>                                                    the_geom #>                                                      <char> #> 1: POLYGON ((-180 -90, -180 90, 180 90, 180 -90, -180 -90)) #> 2: POLYGON ((-180 -90, -180 90, 180 90, 180 -90, -180 -90)) #> 3: POLYGON ((-180 -90, -180 90, 180 90, 180 -90, -180 -90)) #>"},{"path":"https://otndo.obrien.page/reference/otndo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"otndo: Understand your OTN data — otndo-package","title":"otndo: Understand your OTN data — otndo-package","text":"package provides functions summarize various type OTN-style data.","code":""},{"path":[]},{"path":"https://otndo.obrien.page/reference/otndo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"otndo: Understand your OTN data — otndo-package","text":"Maintainer: Michael O'Brien mike@obrien.page (ORCID)","code":""},{"path":"https://otndo.obrien.page/reference/prep_match_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare the detection match summary data — prep_match_table","title":"Prepare the detection match summary data — prep_match_table","text":"Prepare detection match summary data","code":""},{"path":"https://otndo.obrien.page/reference/prep_match_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare the detection match summary data — prep_match_table","text":"","code":"prep_match_table(extract, type = c(\"tag\", \"receiver\"))"},{"path":"https://otndo.obrien.page/reference/prep_match_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare the detection match summary data — prep_match_table","text":"extract matched (transmitter) qualified (receiver) OTN detections type Tag receiver data? Takes values \"tag\" \"receiver\"; defaults \"tag\".","code":""},{"path":"https://otndo.obrien.page/reference/prep_station_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize OTN extract data by station and convert to a spatial object — prep_station_spatial","title":"Summarize OTN extract data by station and convert to a spatial object — prep_station_spatial","text":"Summarize OTN extract data station convert spatial object","code":""},{"path":"https://otndo.obrien.page/reference/prep_station_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize OTN extract data by station and convert to a spatial object — prep_station_spatial","text":"","code":"prep_station_spatial(extract, type = c(\"tag\", \"receiver\"))"},{"path":"https://otndo.obrien.page/reference/prep_station_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize OTN extract data by station and convert to a spatial object — prep_station_spatial","text":"extract OTN extract data type type extract data: \"tag\" \"receiver\"","code":""},{"path":"https://otndo.obrien.page/reference/prep_station_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize OTN extract data by station and convert to a spatial object — prep_station_spatial","text":"","code":"if (FALSE) { # Get an extract file download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\"),   mode = \"wb\" ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched_dets <- data.table::fread(   file.path(td, \"pbsm_matched_detections_2018.csv\") )  # Convert to spatial prep_station_spatial(matched_dets, \"tag\") }"},{"path":"https://otndo.obrien.page/reference/project_contacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and combine the contacts for matched projects — project_contacts","title":"Extract and combine the contacts for matched projects — project_contacts","text":"Extract combine contacts matched projects","code":""},{"path":"https://otndo.obrien.page/reference/project_contacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and combine the contacts for matched projects — project_contacts","text":"","code":"project_contacts(extract, type = c(\"receiver\", \"tag\"))"},{"path":"https://otndo.obrien.page/reference/project_contacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and combine the contacts for matched projects — project_contacts","text":"extract data.frame transmitter/receiver detections matched OTN: matched detections tags qualified detections receivers type Type extract data: \"tag\" \"receiver\"","code":""},{"path":"https://otndo.obrien.page/reference/project_contacts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and combine the contacts for matched projects — project_contacts","text":"data.table containing project names, principal investigators (PI), points contact (POC), respective emails. Multiple emails separated commas.","code":""},{"path":"https://otndo.obrien.page/reference/project_contacts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and combine the contacts for matched projects — project_contacts","text":"","code":"if (FALSE) { # Set up example data td <- file.path(tempdir(), \"otndo_example\") dir.create(td)  download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\"),   mode = \"wb\" ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched <- read.csv(file.path(   td,   \"pbsm_matched_detections_2018.csv\" ))  # Actually run the function project_contacts(matched, type = \"tag\")  # Clean up unlink(td, recursive = TRUE) }"},{"path":"https://otndo.obrien.page/reference/remaining_transmitters.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate transmitters remaining in the system — remaining_transmitters","title":"Estimate transmitters remaining in the system — remaining_transmitters","text":"function estimates transmitters remaining system finding last date detection transmitter summing available transmitters given day. coarse measure likely inaccurate sparse data short time scales.","code":""},{"path":"https://otndo.obrien.page/reference/remaining_transmitters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate transmitters remaining in the system — remaining_transmitters","text":"","code":"remaining_transmitters(matched, push_log, release = NULL)"},{"path":"https://otndo.obrien.page/reference/remaining_transmitters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate transmitters remaining in the system — remaining_transmitters","text":"matched matched OTN transmitter detections push_log data.frame containing date -recent data push. requirement likely change future. release Optional. Data frame release times/locations; subset matched detections data","code":""},{"path":"https://otndo.obrien.page/reference/remaining_transmitters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate transmitters remaining in the system — remaining_transmitters","text":"","code":"if (FALSE) { #' # Set up example data td <- file.path(tempdir(), \"otndo_example\") dir.create(td)  # For tag data download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched <- read.csv(file.path(   td,   \"pbsm_matched_detections_2018.csv\" ))  # Run remaining_transmitters() remaining_transmitters(matched_dets, data.frame(date = as.Date(\"2020-01-01\"))) }"},{"path":"https://otndo.obrien.page/reference/station_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the station summary table — station_table","title":"Create the station summary table — station_table","text":"Create station summary table","code":""},{"path":"https://otndo.obrien.page/reference/station_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the station summary table — station_table","text":"","code":"station_table(extract, type = c(\"tag\", \"receiver\"))"},{"path":"https://otndo.obrien.page/reference/station_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the station summary table — station_table","text":"extract OTN detections. \"Matched\" detections tag data \"qualified\" detections receiver data type type data summarized.","code":""},{"path":"https://otndo.obrien.page/reference/station_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the station summary table — station_table","text":"tag data, data.table PI, project, station, number detections, number individuals heard. receiver data, data.table station, number detections, number individuals heard (assuming PI POC ).","code":""},{"path":"https://otndo.obrien.page/reference/station_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the station summary table — station_table","text":"","code":"if (FALSE) { # Set up example data td <- file.path(tempdir(), \"otndo_example\") dir.create(td)  # For tag data download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched <- read.csv(file.path(   td,   \"pbsm_matched_detections_2018.csv\" ))  # Actually run the function prep_station_table(matched, type = \"tag\")    # For receiver data download.file(   paste0(     \"https://members.oceantrack.org/data/repository/pbsm/\",     \"detection-extracts/pbsm_qualified_detections_2018.zip/\",     \"@download/file\"   ),   destfile = file.path(td, \"pbsm_qualified_detections_2018.zip\"),   mode = \"wb\" ) unzip(   file.path(td, \"pbsm_qualified_detections_2018.zip\"),   exdir = td )  qualified <- read.csv(file.path(td, \"pbsm_qualified_detections_2018.csv\"))  # Actually run the function station_table(qualified, type = \"receiver\")  # Clean up unlink(td, recursive = TRUE) }"},{"path":"https://otndo.obrien.page/reference/temporal_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an abacus plot of detections by project — temporal_distribution","title":"Create an abacus plot of detections by project — temporal_distribution","text":"Create abacus plot detections project","code":""},{"path":"https://otndo.obrien.page/reference/temporal_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an abacus plot of detections by project — temporal_distribution","text":"","code":"temporal_distribution(extract, type = c(\"tag\", \"receiver\"))"},{"path":"https://otndo.obrien.page/reference/temporal_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an abacus plot of detections by project — temporal_distribution","text":"extract OTN data extract file type Transmitter (tag) receiver detections?","code":""},{"path":"https://otndo.obrien.page/reference/temporal_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an abacus plot of detections by project — temporal_distribution","text":"","code":"if (FALSE) { # Set up example data td <- file.path(tempdir(), \"otndo_example\") dir.create(td)  # For tag data download.file(   paste0(     \"https://members.oceantrack.org/data/repository/\",     \"pbsm/detection-extracts/pbsm_matched_detections_2018.zip/@download/file\"   ),   destfile = file.path(td, \"pbsm_matched_detections_2018.zip\") ) unzip(file.path(td, \"pbsm_matched_detections_2018.zip\"),   exdir = td )  matched <- read.csv(file.path(   td,   \"pbsm_matched_detections_2018.csv\" ))  temporal_distribution(matched, \"tag\") }"},{"path":"https://otndo.obrien.page/reference/utilities-make.html","id":null,"dir":"Reference","previous_headings":"","what":"Place where functions live for the make_*_summary family of functions — utilities-make","title":"Place where functions live for the make_*_summary family of functions — utilities-make","text":"Place functions live make_*_summary family functions","code":""},{"path":"https://otndo.obrien.page/reference/utilities-make.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place where functions live for the make_*_summary family of functions — utilities-make","text":"","code":"clean_otn_deployment(deployment)  convert_times(date_time)  provided_file_unzip(files, temp_dir)  write_to_tempdir(type, files, temp_dir)  extract_proj_name(detection_file)"},{"path":"https://otndo.obrien.page/reference/utilities-make.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place where functions live for the make_*_summary family of functions — utilities-make","text":"deployment Character. File path deployment metadata. date_time Character numeric. Date-time convert. files Character. File paths files unzipped written directory temp_dir Character. File path temporary directory type Character. Type data (deployment, qualified, unqualified). detection_file Character. File path detections.","code":""},{"path":[]},{"path":"https://otndo.obrien.page/news/index.html","id":"v-0-2","dir":"Changelog","previous_headings":"","what":"v 0.2.2","title":"otndo 0.2","text":"Fixed behavior clean_otn_deployment return different columns internal transmitter logged. Issue #10; d58e2d4 Add internal function (convert_times) checks Excel-formatted date-times converts accordingly f13f360","code":""},{"path":"https://otndo.obrien.page/news/index.html","id":"v-0-2-1","dir":"Changelog","previous_headings":"","what":"v 0.2.1","title":"otndo 0.2","text":"Fleshes tests get 100% coverage (now!). Note overestimate can’t actually get QMD files test. Fix bug project_contacts merge wasn’t actually joing thought . ea26c56 Fix bug QMD files didn’t reference new data properly, resulting repeated summary tables. e7d1368 Properly handles situation new detections exist. 07d9590 Fixed bug CSV deployment metadata actually checked presence header. dc420e6","code":""},{"path":"https://otndo.obrien.page/news/index.html","id":"v-0-2-2","dir":"Changelog","previous_headings":"","what":"v 0.2.0","title":"otndo 0.2","text":"Breaks functions internal QMD template. allow clearer errors -directed testing. deployment_gantt match_map match_table matched_abacus otn_query prep_station_spatial project_contacts remaining_transmitters station_table temporal_distribution Added initial suite tests functions. Changed license CC-","code":""},{"path":"https://otndo.obrien.page/news/index.html","id":"otndo-01","dir":"Changelog","previous_headings":"","what":"otndo 0.1","title":"otndo 0.1","text":"Fix issue otndo get lost deployment metadata sheet wasn’t labeled Switch semantic versioning Add figure table captions Runiverse! Miscellaneous fixes Combine PIs/POCs projects changing staff","code":""},{"path":"https://otndo.obrien.page/news/index.html","id":"otndo-0009000","dir":"Changelog","previous_headings":"","what":"otndo 0.0.0.9000","title":"otndo 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
